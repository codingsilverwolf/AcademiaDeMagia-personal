import academia.*
import magos.*

describe "test de selene" {
    test "Selene entrena sin estar potenciada y su energía aumenta en 25" {
        selene.noEstaPotenciada()
        selene.entrenar()
        assert.equals(60, selene.energia())
    }
    test "Ahora selene entrena estando potenciada y su poder se duplica"{
        selene.entrenar()
        assert.equals(120, selene.poder())
    }

}

describe "test de balthazar"{
    test "Balthazar entrena y ahora su poder es"{   
        balthazar.entrenar()
        assert.equals(87, balthazar.poder())
    }

}

describe "test de iris"{
    test "Iris usa sanacion en el Escudo Mágico de Arcana luego de entrenar una vez"{
        iris.entrenar()
        iris.usarSanacionEnEscudoMagicoDeArcana()
        assert.equals(550, escudo.resistencia())
        assert.equals(700, escudo.durabilidad())
    }

    test "Iris vuelve a entrenar y a usar sanacion en el Escudo Mágico de Arcana"{
        iris.entrenar()
        iris.usarSanacionEnEscudoMagicoDeArcana()
        iris.entrenar()
        iris.usarSanacionEnEscudoMagicoDeArcana()
        assert.equals(870, escudo.resistencia())
        assert.equals(940, escudo.durabilidad())
    }

}

describe "test de academia" {
  test "La academia entrena a los 4 magos. Balthazar e Iris permanecen en el equipo" {
    academia.reclutar(selene)
    academia.reclutar(balthazar)
    assert.that(academia.equipoDeMagos().contains(balthazar))
    
  }
}